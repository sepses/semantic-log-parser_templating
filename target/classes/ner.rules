# make all patterns case-sensitive
ENV.defaultStringMatchFlags = 0
ENV.defaultStringPatternFlags = 0

# these Java classes will be used by the rules
ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

# define some regexes over tokens
$IP_ADDRESS = "/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/";
$DOMAIN_NAME = "/((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}/";
$URL = "/(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]/";
$USER = "/(\w+)/";
$PORT = "/(\d+)/";

# rule for recognizing company names
{ ruleType: "tokens", pattern: ([{word:$IP_ADDRESS}]), action: Annotate($0, ner, "Ip"), result: "Ip" }
{ ruleType: "tokens", pattern: ([{word:$DOMAIN_NAME}]), action: Annotate($0, ner, "Domain"), result: "Domain" }
{ ruleType: "tokens", pattern: ([{word:$URL}]), action: Annotate($0, ner, "Url"), result: "Url" }
{ ruleType: "tokens", pattern: ([{word:/user/}]+ [{word:/:|-|=|\s/}]? ([{word:$USER}])), action: Annotate($1, ner, "User"), result: "User" }
{ ruleType: "tokens", pattern: ([{word:/port/}] + ([{word:$PORT}])), action: Annotate($1, ner, "Port"), result: "Port" }