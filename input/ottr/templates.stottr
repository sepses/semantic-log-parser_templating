@prefix rdf: 	  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: 	  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: 	  <http://www.w3.org/2002/07/owl#> .
@prefix xsd: 	  <http://www.w3.org/2001/XMLSchema#> .

@prefix ottr: 	  <http://ns.ottr.xyz/0.4/> .
@prefix ax: 	  <http://tpl.ottr.xyz/owl/axiom/0.1/> .
@prefix rstr: 	  <http://tpl.ottr.xyz/owl/restriction/0.1/> .

@prefix :  <http://w3id.org/sepses/vocab/log/core#> .
@prefix parser:  <http://w3id.org/sepses/vocab/log/parser#> .
@prefix instance:  <http://w3id.org/sepses/id/> .

@prefix sepses: 	  <http://sepses.com/ns#> .

# Default logline
sepses:LogLine[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash] :: {
      sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
      sepses:Type(?id, :DefaultLogLine)
    } .

# Basic templates
sepses:BasicLogLineInformation[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash] :: {
      ottr:Triple(?id, :timestamp, ?timeStamp),
      ottr:Triple(?id, parser:templateId, ?templateHash),
      ottr:Triple(?id, :logMessage, ?message)
    } .

sepses:Type[ottr:IRI ?id, ottr:IRI ?type] :: {
       ottr:Triple(?id, rdf:type, ?type)
    } .

sepses:UnknownParameterList[ottr:IRI ?id, List<xsd:string> ?parameters] :: {
      cross | ottr:Triple(?id, parser:connected, ++?parameters)
    } .

sepses:UnknownConnection[ottr:IRI ?id, xsd:string ?value] :: {
           ottr:Triple(?id, parser:connected, ?value)
      } .

sepses:User[ottr:IRI ?id, xsd:string ?user] :: {
    ottr:Triple(?id, parser:connectedUser, ?user)
} .

sepses:Ip[ottr:IRI ?id, xsd:string ?ip] :: {
    ottr:Triple(?id, parser:hasIP, ?ip)
} .

sepses:Domain[ottr:IRI ?id, xsd:string ?domain] :: {
       ottr:Triple(?id, parser:hasDomain, ?domain)
   } .

sepses:Port[ottr:IRI ?id, xsd:string ?port] :: {
   ottr:Triple(?id, parser:connectedPort, ?port)
} .

sepses:Url[ottr:IRI ?id, xsd:string ?url] :: {
       ottr:Triple(?id, parser:hasURL, ?url)
   } .

# Auto generated templates

# New Templates: 2020-01-07T06:48:46.374+01:00
# Example: reverse mapping checking getaddrinfo for <*> [<*>] failed - POSSIBLE BREAK-IN ATTEMPT!
sepses:LogLine_f7fe7f88[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?domain, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Domain(?id, ?domain),
	 sepses:Ip(?id, ?ip)
} .

# Example: Invalid user <*> from <*>
sepses:LogLine_9302fad4[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?user, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:User(?id, ?user),
	 sepses:Ip(?id, ?ip)
} .

# Example: input_userauth_request: invalid user <*> [preauth]
sepses:LogLine_6b674ff1[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?user] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:User(?id, ?user)
} .

# Example: pam_unix(sshd:auth): authentication failure; logname= uid=<*> euid=<*> tty=ssh ruser= <*>
sepses:LogLine_ebf067b7[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?param2, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:UnknownConnection(?id, ?param2),
	 sepses:Ip(?id, ?ip)
} .

# Example: Failed <*> for invalid user <*> from <*> port <*> ssh<*>
sepses:LogLine_755dc626[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?user, xsd:string ?ip, xsd:string ?port, xsd:string ?param5] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:User(?id, ?user),
	 sepses:Ip(?id, ?ip),
	 sepses:Port(?id, ?port),
	 sepses:UnknownConnection(?id, ?param5)
} .

# Example: Connection closed by <*> [preauth]
sepses:LogLine_2491ca3e[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip)
} .

# Example: Received disconnect from <*> <*>: <*> <*> <*>
sepses:LogLine_c1a97604[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip, xsd:string ?param2, xsd:string ?param3] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip),
	 sepses:UnknownConnection(?id, ?param2),
	 sepses:UnknownConnection(?id, ?param3)
} .

# Example: pam_unix(sshd:auth): authentication failure; logname= uid=<*> euid=<*> tty=ssh ruser= <*> <*>
sepses:LogLine_533c6615[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?param2, xsd:string ?user] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:UnknownConnection(?id, ?param2),
	 sepses:User(?id, ?user)
} .

# Example: Failed password for <*> from <*> port <*> ssh<*>
sepses:LogLine_ada372e1[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?ip, xsd:string ?port, xsd:string ?param4] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:Ip(?id, ?ip),
	 sepses:Port(?id, ?port),
	 sepses:UnknownConnection(?id, ?param4)
} .

# Example: message repeated <*> times: [ Failed password for root from <*> port <*> ssh2]
sepses:LogLine_b542638e[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?ip, xsd:string ?port] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:Ip(?id, ?ip),
	 sepses:Port(?id, ?port)
} .

# Example: PAM <*> more authentication failures; logname= uid=<*> euid=<*> tty=ssh ruser= <*> user=root
sepses:LogLine_baeb51b0[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?param2, xsd:string ?param3, xsd:string ?param4] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:UnknownConnection(?id, ?param2),
	 sepses:UnknownConnection(?id, ?param3),
	 sepses:UnknownConnection(?id, ?param4)
} .

# Example: PAM service(sshd) ignoring max retries; <*> > <*>
sepses:LogLine_2f2318e5[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?param2] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:UnknownConnection(?id, ?param2)
} .

# Example: Did not receive identification string from <*>
sepses:LogLine_c926c7d9[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip)
} .

# Example: error: Received disconnect from <*> <*>: com.jcraft.jsch.JSchException: Auth fail [preauth]
sepses:LogLine_90101fdc[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip)
} .

# Example: Received disconnect from <*> <*>: Closed due to user request. [preauth]
sepses:LogLine_189f897e[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip)
} .

# Example: PAM <*> more authentication <*> logname= uid=<*> euid=<*> tty=ssh ruser= rhost=<*>
sepses:LogLine_e5a48069[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1, xsd:string ?param2, xsd:string ?param3, xsd:string ?param4, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1),
	 sepses:UnknownConnection(?id, ?param2),
	 sepses:UnknownConnection(?id, ?param3),
	 sepses:UnknownConnection(?id, ?param4),
	 sepses:Ip(?id, ?ip)
} .

# Example: error: Received disconnect from <*> <*>: No more user authentication methods available. [preauth]
sepses:LogLine_effd4a15[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip)
} .

# Example: Accepted password for fztu from <*> port <*> ssh<*>
sepses:LogLine_bfd464ee[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?ip, xsd:string ?port, xsd:string ?param3] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:Ip(?id, ?ip),
	 sepses:Port(?id, ?port),
	 sepses:UnknownConnection(?id, ?param3)
} .

# Example: pam_unix(sshd:session): session opened for user fztu by (uid=<*>)
sepses:LogLine_cb82654d[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash, xsd:string ?param1] :: {
	 sepses:BasicLogLineInformation(?id, ?timeStamp, ?message, ?templateHash),
	 sepses:Type(?id, :Logline),
	 sepses:UnknownConnection(?id, ?param1)
} .
